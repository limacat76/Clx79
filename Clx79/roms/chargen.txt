; Text Rom
.org $0000
.byte $48, $65, $6C, $6C, $6F, $2C, $20, $57, $6F, $72, $6C, $64, $21, $20, $33, $2E, $30
;       H    e    l    l    o    ,         W    o    r    l    d    !         3    .    0

.org $00A0
.byte $20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$2A,$2B,$2C,$2D,$2E,$2F
.byte $30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$3A,$3B,$3C,$3D,$3E,$3F
.byte $40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$4A,$4B,$4C,$4D,$4E,$4F
.byte $50,$51,$52,$53,$54,$55,$56,$57,$58,$59,$5A,$5B,$5C,$5D,$5E,$5F
.byte $60,$61,$62,$63,$64,$65,$66,$67,$68,$69,$6A,$6B,$6C,$6D,$6E,$6F
.byte $70,$71,$72,$73,$74,$75,$76,$77,$78,$79,$7A,$7B,$7C,$7D,$7E,$7F

; Character Rom
; we skip the first 32 characters

.org $1100
;  $20 :space:
.byte #%00000000
.byte #%00000000
.byte #%00000000
.byte #%00000000
.byte #%00000000
.byte #%00000000
.byte #%00000000
.byte #%00000000

;  $21 !
.byte #%00010000
.byte #%00010000
.byte #%00010000
.byte #%00010000
.byte #%00010000
.byte #%00000000
.byte #%00010000
.byte #%00000000

;  $22 "
.byte #%01101100
.byte #%01101100
.byte #%00100100
.byte #%00000000
.byte #%00000000
.byte #%00000000
.byte #%00000000
.byte #%00000000

;  $23 #
.byte #%00000000
.byte #%00100100
.byte #%01111110
.byte #%00100100
.byte #%00100100
.byte #%01111110
.byte #%01000100
.byte #%00000000

;  $24 $
.byte #%00011000
.byte #%00111110
.byte #%01000000
.byte #%00111100
.byte #%00000010
.byte #%01111100
.byte #%00110000
.byte #%00000000

;  $25 %
.byte #%00000000
.byte #%01100010
.byte #%01100100
.byte #%00001000
.byte #%00010000
.byte #%00101100
.byte #%01001100
.byte #%00000000

;  $26 &
.byte #%00110000
.byte #%01001000
.byte #%01001000
.byte #%00110010
.byte #%01001100
.byte #%01001100
.byte #%00110010
.byte #%00000000

;  $27 '
.byte #%01100000
.byte #%01100000
.byte #%00100000
.byte #%00000000
.byte #%00000000
.byte #%00000000
.byte #%00000000
.byte #%00000000

;  $28 (
.byte #%00011000
.byte #%00100000
.byte #%01000000
.byte #%01000000
.byte #%01000000
.byte #%00100000
.byte #%00011000
.byte #%00000000

;  $29 )
.byte #%00011000
.byte #%00000100
.byte #%00000010
.byte #%00000010
.byte #%00000010
.byte #%00000100
.byte #%00011000
.byte #%00000000

;  $2A *
.byte #%00010000
.byte #%01010100
.byte #%00111000
.byte #%00010000
.byte #%00111000
.byte #%01010100
.byte #%00010000
.byte #%00000000

;  $2B +
.byte #%00000000
.byte #%00010000
.byte #%00010000
.byte #%01111100
.byte #%00010000
.byte #%00010000
.byte #%00000000
.byte #%00000000

;  $2C ,
.byte #%00000000
.byte #%00000000
.byte #%00000000
.byte #%00000000
.byte #%00000000
.byte #%00001100
.byte #%00001100
.byte #%00000100

;  $2D -
.byte #%00000000
.byte #%00000000
.byte #%00000000
.byte #%01111100
.byte #%00000000
.byte #%00000000
.byte #%00000000
.byte #%00000000

;  $2E .
.byte #%00000000
.byte #%00000000
.byte #%00000000
.byte #%00000000
.byte #%00000000
.byte #%00001100
.byte #%00001100
.byte #%00000000

;  $2F /
.byte #%00000001
.byte #%00000010
.byte #%00000100
.byte #%00001000
.byte #%00010000
.byte #%00100000
.byte #%01000000
.byte #%00000000

;  $30 0
.byte #%00111100
.byte #%01000110
.byte #%01001010
.byte #%01011010
.byte #%01010010
.byte #%01100010
.byte #%00111100
.byte #%00000000

;  $31 1
.byte #%00010000
.byte #%00110000
.byte #%01010000
.byte #%00010000
.byte #%00010000
.byte #%00010000
.byte #%01111100
.byte #%00000000

;  $32 2
.byte #%00111100
.byte #%01000010
.byte #%00000100
.byte #%00001000
.byte #%00010000
.byte #%00100000
.byte #%01111110
.byte #%00000000

;  $33 3
.byte #%00111100
.byte #%01000010
.byte #%00000010
.byte #%00001100
.byte #%00000010
.byte #%01000010
.byte #%00111100
.byte #%00000000

;  $34 4
.byte #%00001000
.byte #%00011000
.byte #%00101000
.byte #%00101000
.byte #%01001000
.byte #%01111110
.byte #%00001000
.byte #%00000000

;  $35 5
.byte #%01111110
.byte #%01000000
.byte #%01111100
.byte #%00000010
.byte #%00000010
.byte #%00000010
.byte #%01111100
.byte #%00000000

;  $36 6
.byte #%00111110
.byte #%01000000
.byte #%01111100
.byte #%01000010
.byte #%01000010
.byte #%01000010
.byte #%00111100
.byte #%00000000

;  $37 7
.byte #%01111110
.byte #%00000010
.byte #%00000100
.byte #%00001000
.byte #%00010000
.byte #%00100000
.byte #%01000000
.byte #%00000000

;  $38 8
.byte #%00111100
.byte #%01000010
.byte #%00111100
.byte #%01000010
.byte #%01000010
.byte #%01000010
.byte #%00111100
.byte #%00000000

;  $39 9
.byte #%00111100
.byte #%01000010
.byte #%00111110
.byte #%00000010
.byte #%00000010
.byte #%00000010
.byte #%01111100
.byte #%00000000

;  $3A :
.byte #%00000000
.byte #%00000000
.byte #%00001100
.byte #%00001100
.byte #%00000000
.byte #%00001100
.byte #%00001100
.byte #%00000000

;  $3B ;
.byte #%00000000
.byte #%00000000
.byte #%00001100
.byte #%00001100
.byte #%00000000
.byte #%00001100
.byte #%00001100
.byte #%00000100

;  $3C <
.byte #%00000000
.byte #%00010000
.byte #%00100000
.byte #%01000000
.byte #%01000000
.byte #%00100000
.byte #%00010000
.byte #%00000000

;  $3B ;
.byte #%00000000
.byte #%00000000
.byte #%00000000
.byte #%01111110
.byte #%00000000
.byte #%01111110
.byte #%00000000
.byte #%00000000

;  $3D >
.byte #%00000000
.byte #%00001000
.byte #%00000100
.byte #%00000010
.byte #%00000010
.byte #%00000100
.byte #%00001000
.byte #%00000000

;  $3F ?
.byte #%00111000
.byte #%01000100
.byte #%01000100
.byte #%00001000
.byte #%00010000
.byte #%00000000
.byte #%00010000
.byte #%00000000

;  $XX copy
.byte #%00000000
.byte #%00000000
.byte #%00000000
.byte #%00000000
.byte #%00000000
.byte #%00000000
.byte #%00000000
.byte #%00000000
